Total: 4 Major Patterns ðŸ”¥ Two Pointer ke liye
-----------------------------------------------
ðŸ“š Full Breakdown of Two Pointer Patterns:

âœ… 1. Opposite Direction Pointers (Start & End)
	â€¢	left = 0, right = n - 1
	â€¢	Compare or merge from both ends
	â€¢	ðŸ”¸ Use when array is sorted or needs element pairing

ðŸ§ª Examples:
	â€¢	Two sum (sorted)
	â€¢	Valid Palindrome
	â€¢	Container with most water


âœ… 2. Same Direction Pointers (Both move forward)
	â€¢	left = 0, right = 0
	â€¢	Used in most sliding window problems
	â€¢	Shrink/expand range dynamically

ðŸ§ª Examples:
	â€¢	Longest substring with unique characters
	â€¢	Minimum window substring
	â€¢	Subarray with at most K distinct

âœ… 3. Fixed Window Size
	â€¢	Move right until window size hits k, then slide forward
	â€¢	Constant size window

ðŸ§ª Examples:
	â€¢	Max sum subarray of size k
	â€¢	Count subarrays of size k with condition

âœ… 4. Merge-type Two Pointer
	â€¢	Used when merging two sorted arrays/lists
	â€¢	Each pointer tracks a different array/list



âœ… Sliding Window Patterns.

ðŸ”¥ Sliding Window ke 2 Core Patterns hote hain:
	1.	Fixed-size Sliding Window
	2.	Variable-size (Dynamic) Sliding Window

And occasionally:
3. Minimum/Maximum Window Problems (Special case of variable-size)