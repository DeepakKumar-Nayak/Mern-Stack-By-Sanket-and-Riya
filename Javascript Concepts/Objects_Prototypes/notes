Class: 
------- 
Classes are just like blueprint. 
classes are going to represent how an entity should look and behave. 

when i say how do they look that mean the property they posses and when i say how do they behave that mean action they perform 

Lets talk about the propery they posses which are otherwise known as the Data Members for examle: 

Just take an example of a Product Class so what are the properties of a product.

price,
quantity,
productName,
reviews

Now lets talk about the actions they perform that mean which are otherwise known as Member Functions: 

We can Display the details of the product
We can buy a Product
we can wishlist a product
we can rate a product
adding review to a product
adding product to the cart

// How to make a class in Javascript 
with the help of class keyword we can make a class in Javascript. 

class Product {
    // here we can add some data member and member functions
}

Example: 
--------
class Product {

    // writting some data members: 

    name
    price
    category
    description
    quantity

    // writing some member functions
 

    addToCart(){
        console.log('product added to the cart')
    }

    DisplayDetails(){
        console.log('display details of the product')
    }


}

// no need of writting function while creating a member function we  can just write simply name of the member function

    . function addToCart() - not required
    . addToCart() - this is great

// Constructor: 
---------------
. Every class in javascript has one special member function called as constructor which is only executed once at the time of object creation and that too it will be the first method to get execute. 

. whenever we create an object and try to execute it constructor will be first one to get execute out of all the methods and the constructor is the method which get automatically called by JS. 

. Koi bhi class ham banaye usmein bydefault kuch constructor bane banaya milega , already available for any class which is called as default constructor.

. Yeah jo constructor hai thoda diffrent hai kyun ki yeah ek hi method hai jo javascript khud se call kar dega baki kisi bhi member function ko javascript khud se call nahi karega 



Objects:
-------
The physical Realisation of the class are called Objects
To create an Object in JS we use a keyword called new

// How new works: 
-----------------
Every time we use new it does four following procedure

1. It creates a brand new absolutely empty object. 
2. It calls the constructor of the class and passes the newely created object inside a keyword called this. 
    (constructor ko call karega and apne jo empty plain object banaya hoga usko pass karega but parameter ke tarah pass nahi karega constructor ke andar ek this keyword ka access hoga and ham us plain object ka access us this keyword ko de denge, this keywrod ko aceess kaise mil raha hai kyun ki ham plain object ka access de rahe hein)
3. In step 3 new trigger everything we need to be done for prototype.

4. if from a constructor an object is manually returned then this manual returned object is stored in the called variable, otherwise in any other case either we return something or dont return something constructor doesnot care about it and returns the value inside the this key. 

for example :

    class Product{
        constructor(){
        return 10
        }
    }
    const data = new Product()
    console.log(data)

    data = this i.e the Product
    
    if i do like this then i will get the the whole product where this will be pointing i.e the product object. 

    class Product{
        constructor(){
        return {name: 'deepak'}
        }
    }
    const data = new Product()
    console.log(data)
    but here i will get {name : 'deepak'}

    data = {name: 'deepak'}
 

   
Explanation in Hindi Point4:
-----------------------------
aggar aap constructor se koi object manually return kar rahe ho toh apko wohi object milega as a result par aggar aap koi aur chiz return kar rahe ho (Look at the code above for more clear understanding meine eske liye bhi examples likha hai) so tab mujhe hamara actual product milega jo this ko pointout kar raha ho. 

Program/; 
--------

class Product {
    name;
    category;
    quantity;
    description;
    rating;

    constructor(productName, productCategory, productQuantity, productDescription, productRating){

        this.name = productName; // Laptop
        this.category = productCategory; // Electronics
        this.quantity = productQuantity; // 12
        this.description = productDescription; // Hp Laptop
        this.rating = productRating // 4.0

        addToCart(){
            console.log('product added to the cart')
        }

    }
}

const productOne = new Product('Laptop','Electronics',12, 'Hp Laptop', '4.0')
// aggar apko new data members add karna hai toh aap object ke help se kar sakhte ho called variable ko leke for example; 
productOne.color = "black"
console.log(productOne)

Product {
  name: 'Laptop',
  category: 'Electronics',
  quantity: 12,
  description: 'Hp Laptop',
  rating: '4.0',
  color: 'black'
}

Note: 
-----
aggar mein data member nahi bhi define karun aur directly constructor ke andar define karun like 
this.name = product_name
then also its okay we will not get any error infact when we console productOne then i will get the actual product.
i can also access the productname like console.log(productOne.name)